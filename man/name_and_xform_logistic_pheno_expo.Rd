% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bpe.R
\name{name_and_xform_logistic_pheno_expo}
\alias{name_and_xform_logistic_pheno_expo}
\title{Prepare and Transform Phenotype and Exposure for Logistic Modeling}
\usage{
name_and_xform_logistic_pheno_expo(
  pheno,
  exposure,
  table_object,
  logxform_e = T
)
}
\arguments{
\item{pheno}{Character; the name of the phenotype variable.}

\item{exposure}{Character; the name of the exposure variable.}

\item{table_object}{A list containing a data frame (\code{merged_tab}) where the phenotype and exposure variables are present.}

\item{logxform_e}{Logical; if \code{TRUE}, the exposure variable is log10-transformed. Default is \code{TRUE}.}
}
\value{
A modified version of the input \code{table_object} with the following updates:
\item{merged_tab}{The data frame updated with \code{pheno} and \code{expo} columns. The \code{expo} column will be log10-transformed if \code{logxform_e = TRUE}.}
}
\description{
This function assigns the phenotype and exposure variables in a table object and optionally applies a log10 transformation to the exposure variable.
}
\details{
The function modifies the input \code{table_object} by creating a \code{pheno} column corresponding to the phenotype variable and an \code{expo} column for the exposure variable. If \code{logxform_e} is set to \code{TRUE}, the exposure variable is log10-transformed; otherwise, it is kept on its natural scale. Logging statements provide information on the transformation applied.
}
\examples{
\dontrun{
library(dplyr)

# Example table object
table_object <- list(
  merged_tab = data.frame(
    diabetes_status = c(0, 1, 1, 0),
    pollution_exposure = c(10, 20, 15, 30)
  )
)

# Assign phenotype and log-transform exposure
result <- name_and_xform_logistic_pheno_expo(
  pheno = "diabetes_status",
  exposure = "pollution_exposure",
  table_object = table_object,
  logxform_e = TRUE
)

# View transformed data
result$merged_tab
}

}
