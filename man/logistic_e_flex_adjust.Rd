% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bpe.R
\name{logistic_e_flex_adjust}
\alias{logistic_e_flex_adjust}
\title{Flexible Logistic Regression for Exposure and Adjustment Scenarios}
\usage{
logistic_e_flex_adjust(
  pheno,
  exposure,
  adjustment_variables,
  con,
  series = NULL,
  logxform_e = T,
  scale_e = T,
  pheno_table_name = NULL,
  expo_table_name = NULL,
  quantile_expo = NULL,
  exposure_levels = NULL
)
}
\arguments{
\item{pheno}{Character; the name of the phenotype variable.}

\item{exposure}{Character; the name of the exposure variable.}

\item{adjustment_variables}{Data frame with two columns: \code{scenario} (indicating adjustment scenarios) and \code{variables} (adjustment variables for each scenario).}

\item{con}{A database connection object to query tables for variables.}

\item{series}{Character vector (optional); the series of datasets to consider (e.g., survey years).}

\item{logxform_e}{Logical; if \code{TRUE}, the exposure variable is log-transformed. Default is \code{TRUE}.}

\item{scale_e}{Logical; if \code{TRUE}, the exposure variable is scaled (z-score transformation). Default is \code{TRUE}.}

\item{pheno_table_name}{Character (optional); explicit table name for the phenotype variable. Default is \code{NULL}.}

\item{expo_table_name}{Character (optional); explicit table name for the exposure variable. Default is \code{NULL}.}

\item{quantile_expo}{Numeric vector of quantiles for discretizing the exposure variable. Default is \code{NULL}.}

\item{exposure_levels}{Character vector specifying levels for the exposure variable as a categorical variable. Default is \code{NULL}.}
}
\value{
A list containing:
\item{log_e}{Logical; whether the exposure variable was log-transformed.}
\item{scaled_e}{Logical; whether the exposure variable was scaled.}
\item{unweighted_n}{Integer; the number of unweighted observations used in the analysis.}
\item{phenotype}{The phenotype variable name.}
\item{series}{The series of datasets considered.}
\item{exposure}{The exposure variable name.}
\item{models}{A list of logistic regression models for each adjustment scenario.}
\item{base_models}{A list of base models (without exposure) for each adjustment scenario.}
\item{adjustment_variables}{The adjustment variables used in the models.}
\item{demographic_breakdown}{A demographic breakdown table of the survey design.}
}
\description{
This function fits logistic regression models for a phenotype and exposure, allowing flexible adjustment for various scenarios, transformations, and scaling. It integrates survey design handling and demographic breakdowns.
}
\details{
This function facilitates logistic regression modeling across multiple scenarios for exposure and adjustment variables. It integrates:
\itemize{
\item Survey design creation and multi-year weights.
\item Flexible handling of phenotype and exposure transformations (log-transformation, scaling, quantile discretization, or categorization).
\item Adjustment variable scenarios defined in a structured data frame.
}

The function uses the \strong{survey} package for survey design and regression modeling, and it depends on utility functions like \code{get_table_names_for_varname}, \code{get_x_y_tables_as_list}, and \code{create_svydesign} for data preparation.
}
\examples{
\dontrun{
# Example: Database connection (mock example)
con <- DBI::dbConnect(RSQLite::SQLite(), ":memory:")

# Example adjustment variables
adjustment_vars <- data.frame(
  scenario = c("scenario1"),
  variables = c("RIAGENDR")
)

# Run flexible logistic regression
result <- logistic_e_flex_adjust(
  pheno = "diabetes",
  exposure = "air_pollution",
  adjustment_variables = adjustment_vars,
  con = con,
  series = c("E"),
  logxform_e = TRUE,
  scale_e = TRUE
)

# Access demographic breakdown
result$demographic_breakdown

# Access models
result$models
}

}
